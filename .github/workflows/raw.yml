name: Build OpenWrt Vanilla Firmware

on:
  workflow_dispatch:
    inputs:
      target:
        description: "Target device"
        required: true
        default: "x86-64"
        type: choice
        options:
          - x86-64
          - Raspberry Pi 3B
          - Raspberry Pi 4B
      release_branch:
        description: "OpenWrt Release Version"
        required: true
        default: "24.10.2"
        type: choice
        options:
          - 21.02.7
          - 22.03.6
          - 23.05.3
          - 23.05.5
          - 24.10.0
          - 24.10.2
          - snapshots

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build ${{ inputs.target }} - ${{ inputs.release_branch }}

    steps:
      - name: Set Environment Variables
        run: |
          TARGET="${{ inputs.target }}"
          BRANCH="${{ inputs.release_branch }}"
          echo "TARGET=$TARGET" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

          # Set device-specific variables
          if [ "$TARGET" == "x86-64" ]; then
            echo "PROFILE=generic" >> $GITHUB_ENV
            echo "TARGET_SYSTEM=x86/64" >> $GITHUB_ENV
            echo "TARGET_NAME=x86-64" >> $GITHUB_ENV
          elif [ "$TARGET" == "Raspberry Pi 3B" ]; then
            echo "PROFILE=rpi-3" >> $GITHUB_ENV
            echo "TARGET_SYSTEM=bcm27xx/bcm2710" >> $GITHUB_ENV
            echo "TARGET_NAME=bcm27xx-bcm2710" >> $GITHUB_ENV
          elif [ "$TARGET" == "Raspberry Pi 4B" ]; then
            echo "PROFILE=rpi-4" >> $GITHUB_ENV
            echo "TARGET_SYSTEM=bcm27xx/bcm2711" >> $GITHUB_ENV
            echo "TARGET_NAME=bcm27xx-bcm2711" >> $GITHUB_ENV
          else
            echo "Unsupported target: $TARGET"
            exit 1
          fi

      - name: Install Build Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            build-essential \
            libncurses5-dev libncursesw5-dev \
            zlib1g-dev gawk git gettext \
            libssl-dev xsltproc wget \
            unzip tar gzip

      - name: Download and Extract ImageBuilder
        run: |
          BASE_URL="https://downloads.openwrt.org/releases"
          FILE_BASE="openwrt-imagebuilder-${{ env.BRANCH }}-${{ env.TARGET_NAME }}.Linux-x86_64"
          TARGET_PATH="$BASE_URL/${{ env.BRANCH }}/targets/${{ env.TARGET_SYSTEM }}"

          echo "Trying to download .tar.xz..."
          if wget -nv "$TARGET_PATH/$FILE_BASE.tar.xz"; then
            echo "Extracting .tar.xz..."
            tar -xJf "$FILE_BASE.tar.xz"
            rm -f "$FILE_BASE.tar.xz"
          elif wget -nv "$TARGET_PATH/$FILE_BASE.tar.zst"; then
            echo "Fallback to .tar.zst..."
            sudo apt-get update -qq
            sudo apt-get install -y zstd
            tar --use-compress-program=unzstd -xf "$FILE_BASE.tar.zst"
            rm -f "$FILE_BASE.tar.zst"
          else
            echo "❌ Error: ImageBuilder file not found for $FILE_BASE"
            exit 1
          fi

          IB_DIR=$(find . -maxdepth 1 -type d -name "*imagebuilder*")
          echo "IB_DIR=$IB_DIR" >> $GITHUB_ENV

      - name: Build Vanilla Image
        run: |
          cd "$IB_DIR"
          make image PROFILE="${{ env.PROFILE }}"

      - name: Upload Firmware Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-${{ env.TARGET_NAME }}-${{ env.BRANCH }}
          path: ${{ env.IB_DIR }}/bin/targets/${{ env.TARGET_SYSTEM }}/*
